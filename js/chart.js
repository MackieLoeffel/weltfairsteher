// Generated by CoffeeScript 1.9.1
(function() {
  var BarChart, LineChart, highlightColor, normalColor,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  normalColor = "rgba(0,70,224,0.6)";

  highlightColor = "rgba(255,0,85,1)";

  BarChart = (function() {
    function BarChart(classes1, canvas) {
      var bar, c;
      this.classes = classes1;
      bar = {
        labels: ["Punkte"],
        datasets: (function() {
          var j, len, ref, results;
          ref = this.classes;
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            c = ref[j];
            results.push({
              label: c.name,
              strokeColor: normalColor,
              fillColor: normalColor,
              data: [c.points[c.points.length - 1]]
            });
          }
          return results;
        }).call(this)
      };
      this.chart = new Chart(canvas.getContext("2d")).Bar(bar, {
        barShowStroke: false
      });
    }

    BarChart.prototype.setClass = function(id) {
      var c, i, j, len, ref, results;
      ref = this.classes;
      results = [];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        c = ref[i];
        console.log(this.chart.datasets[i]);
        this.chart.datasets[i].fillColor = c.id === +id ? highlightColor : normalColor;
        results.push(this.chart.update());
      }
      return results;
    };

    return BarChart;

  })();

  LineChart = (function() {
    function LineChart(canvas) {
      this.setClass = bind(this.setClass, this);
      var c, chartConfig, days, j, milliPerDay, numdays, ref, results;
      console.assert(classes.length > 0, "there must be classes!");
      numdays = classes[0].points.length - 1;
      milliPerDay = 24 * 3600 * 1000;
      days = ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"];
      chartConfig = {
        chart: {
          type: "line",
            backgroundColor: "#51DB74",

          renderTo: canvas
        },
        title: {
          text: "Punkte Ã¼ber Zeit"
        },
        xAxis: {
          categories: (function() {
            results = [];
            for (var j = ref = -numdays; ref <= 0 ? j <= 0 : j >= 0; ref <= 0 ? j++ : j--){ results.push(j); }
            return results;
          }).apply(this).map(function(i) {
            var date;
            date = new Date(Date.now() + i * milliPerDay);
            return (date.getUTCDate()) + "." + (date.getUTCMonth() + 1) + ".";
          })
        },
        yAxis: {
          title: {
            text: "Punkte"
          }
        },
        legend: {
          layout: 'vertical',

          align: "right",
          verticalAlign: "middle",
          borderWidth: 0
        },
        series: (function() {
          var k, len, results1;
          results1 = [];
          for (k = 0, len = classes.length; k < len; k++) {
            c = classes[k];
            results1.push({
              name: c.name,
              data: c.points,
              color: normalColor
            });
          }
          return results1;
        })()
      };
      this.chart = new Highcharts.Chart(chartConfig);
      onClassSelectChanged(this.setClass);
      return;
    }

    LineChart.prototype.setClass = function(id) {
      var c, i, j, len;
      if (id == null) {
        return;
      }
      for (i = j = 0, len = classes.length; j < len; i = ++j) {
        c = classes[i];
        this.chart.series[i].update({
          color: c.id === +id ? highlightColor : normalColor
        }, false);
      }
      return this.chart.redraw();
    };

    return LineChart;

  })();

  window.LineChart = LineChart;

}).call(this);
